#include "lvgl/lvgl.h"

/*******************************************************************************
 * Size: 35 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/

#ifndef ICONFONT35PX
#define ICONFONT35PX 1
#endif

#if ICONFONT35PX

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+E802 "î ‚" */
    0xf, 0xff, 0x22, 0xf8, 0x3f, 0xff, 0x6d, 0xfd,
    0x5e, 0xfd, 0x21, 0xff, 0xf0, 0x6f, 0xa4, 0x55,
    0xff, 0x48, 0x1a, 0x21, 0xff, 0xeb, 0x6e, 0x46,
    0xfa, 0x88, 0x7c, 0xdc, 0x8d, 0x10, 0xff, 0xf3,
    0x5e, 0x91, 0xb9, 0xf, 0xfe, 0x23, 0x20, 0x74,
    0x3f, 0xfc, 0x4d, 0xa0, 0x7d, 0x21, 0xff, 0xfb,
    0x79, 0x1b, 0x83, 0xff, 0x98, 0xa0, 0x3a, 0x1f,
    0xfd, 0xeb, 0x80, 0xf2, 0x1f, 0xfc, 0xda, 0x1,
    0xd0, 0xff, 0xee, 0xda, 0x7, 0x83, 0xff, 0x9d,
    0x68, 0x28, 0x87, 0xff, 0x72, 0xd0, 0x3c, 0x1f,
    0xfc, 0xd6, 0xd0, 0x5a, 0x1f, 0xfd, 0xc7, 0x40,
    0xd0, 0x3f, 0xf9, 0xb7, 0x23, 0x68, 0x7f, 0xf7,
    0x1a, 0x1, 0xa2, 0x1f, 0xfc, 0xa6, 0xf2, 0x7,
    0x90, 0xff, 0xf1, 0xb7, 0x21, 0xff, 0xc2, 0x55,
    0x3e, 0x91, 0x57, 0x7, 0xff, 0x85, 0xbd, 0x20,
    0x6f, 0x48, 0x73, 0x7d, 0x45, 0xd4, 0xf5, 0x10,
    0xff, 0xef, 0x5f, 0x51, 0x3, 0x7d, 0x23, 0x7f,
    0x48, 0xd3, 0xea, 0x28, 0x3f, 0xfc, 0x2e, 0x84,
    0xab, 0xd2, 0x13, 0x7a, 0x50, 0x4d, 0xca, 0xf,
    0xff, 0x33, 0x40, 0x3f, 0xa4, 0x6f, 0xa4, 0xd,
    0x3e, 0x90, 0xff, 0xf4, 0xb2, 0x34, 0xc, 0xde,
    0x94, 0x37, 0xa0, 0xff, 0xe9, 0xb5, 0x7f, 0xa8,
    0xa0, 0xff, 0xe1, 0x38, 0x1d, 0xf, 0xe6, 0x88,
    0x6c, 0x3f, 0xf9, 0xcd, 0xf4, 0xbf, 0x85, 0x53,
    0xc8, 0x7f, 0xf0, 0x10, 0x90, 0xff, 0xad, 0x3,
    0xa1, 0xff, 0xca, 0x6f, 0x48, 0xdf, 0xab, 0xbe,
    0x90, 0x5c, 0x87, 0xf2, 0x6, 0x43, 0xf5, 0xa0,
    0x78, 0x3f, 0xf9, 0xd, 0xe9, 0x1b, 0xd2, 0x1f,
    0xfc, 0x6, 0xd0, 0x3a, 0x1f, 0x34, 0x46, 0xe8,
    0xd3, 0xc8, 0x2e, 0xf, 0xfe, 0x3b, 0x72, 0x37,
    0xa4, 0x3f, 0xf8, 0xfa, 0x4, 0x3f, 0xcd, 0xcb,
    0xa5, 0xd, 0xe4, 0x3f, 0xf8, 0xed, 0x11, 0xb9,
    0xf, 0xfe, 0x62, 0x4, 0x3f, 0xf8, 0x2d, 0x3f,
    0xd2, 0x1f, 0xfc, 0x96, 0x41, 0x44, 0x3f, 0xf9,
    0xb4, 0x3, 0xa1, 0xff, 0xdf, 0xa0, 0x19, 0xf,
    0xfe, 0x6b, 0xa0, 0x64, 0x3f, 0xfb, 0xcc, 0x81,
    0xd0, 0xff, 0xe6, 0x5c, 0x7, 0x83, 0xff, 0xbc,
    0xd1, 0x1a, 0x21, 0xff, 0xca, 0x6d, 0x5, 0xc1,
    0xff, 0xde, 0xb9, 0x1a, 0x21, 0xff, 0xc9, 0x6e,
    0x46, 0xd0, 0xff, 0xf0, 0x48, 0x48, 0x7f, 0xf2,
    0x1b, 0xd2, 0x37, 0x21, 0xff, 0xd7, 0x6f, 0xe9,
    0xa, 0xd0, 0x5a, 0x1f, 0xfc, 0x16, 0xf4, 0x8d,
    0xe9, 0xf, 0xfe, 0xaa, 0xaf, 0x48, 0xa0, 0x34,
    0x42, 0xb4, 0x16, 0x87, 0x9a, 0x7a, 0x46, 0xf4,
    0x87, 0xff, 0x59, 0xba, 0x23, 0x7a, 0x9c, 0x8d,
    0x10, 0xad, 0x5, 0xd5, 0xe9, 0x43, 0x7a, 0x43,
    0xff, 0xb0, 0xf2, 0x37, 0xa4, 0x39, 0xa2, 0x34,
    0x42, 0xb4, 0xb, 0xd, 0xf4, 0x87, 0xff, 0x6d,
    0xc2, 0x64, 0x3f, 0xe6, 0x88, 0xd1, 0xa, 0xff,
    0x48, 0x7f, 0xf8, 0x1d, 0x3, 0x7, 0xff, 0x5,
    0xd0, 0x9d, 0xf, 0xff, 0x63, 0x20, 0x7d, 0x2e,
    0xab, 0xe9, 0x1b, 0xd2, 0x1f, 0xfe, 0xeb, 0xd2,
    0x35, 0x94, 0x34, 0xfa, 0x43, 0xff, 0xea, 0xdf,
    0xfa, 0x8a, 0xf, 0xff, 0x40
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 560, .box_w = 84, .box_h = 38, .ofs_x = -1, .ofs_y = -18}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 59394, .range_length = 1, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 1
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t IconFont35px = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 38,          /*The maximum line height required by the font*/
    .base_line = 18,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_HOR,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};

#endif /*#if ICONFONT35PX*/

