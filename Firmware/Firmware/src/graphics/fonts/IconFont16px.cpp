#include "lvgl/lvgl.h"

/*******************************************************************************
 * Size: 16 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/

#ifndef ICONFONT16PX
#define ICONFONT16PX 1
#endif

#if ICONFONT16PX

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+F240 "" */
    0xf, 0x95, 0x5f, 0xfd, 0x25, 0x7, 0xff, 0x15,
    0xf5, 0x17, 0xff, 0xa5, 0x4f, 0x48, 0x7f, 0xf0,
    0x28, 0x13, 0xff, 0xfd, 0x24, 0x27, 0x43, 0xfc,
    0x86, 0x71, 0xbd, 0x21, 0xff, 0xcb, 0xd0, 0x9b,
    0xd2, 0x1f, 0xfc, 0x2d, 0x2, 0x1f, 0xfd, 0x57,
    0x43, 0xff, 0xd0, 0x87, 0xff, 0xa5, 0xf, 0xfe,
    0x16, 0x81, 0xf, 0xfe, 0xa3, 0x44, 0x39, 0xc,
    0xe3, 0x7a, 0x43, 0xff, 0x98, 0x84, 0xdc, 0x87,
    0xe9, 0x9, 0xff, 0xfe, 0x94, 0x13, 0x21, 0xff,
    0xc0, 0xbd, 0x45, 0xff, 0xe9, 0x53, 0xd0, 0x7f,
    0x80,

    /* U+F241 "" */
    0xf, 0x95, 0x5f, 0xfd, 0x25, 0x7, 0xff, 0x15,
    0xf5, 0x17, 0xff, 0xa5, 0x4f, 0x48, 0x7f, 0xf0,
    0x28, 0x13, 0xff, 0xfd, 0x24, 0x27, 0x43, 0xfc,
    0x86, 0x71, 0xbd, 0x20, 0xbe, 0x83, 0xff, 0x89,
    0xa1, 0x37, 0xa4, 0x3f, 0xf8, 0x5a, 0x4, 0x8,
    0x72, 0x1f, 0xfc, 0xc7, 0x43, 0xff, 0xd0, 0x87,
    0xff, 0xa5, 0xf, 0xfe, 0x16, 0x81, 0x3, 0xa3,
    0xa1, 0xff, 0xcb, 0x68, 0x87, 0x21, 0x9c, 0x6f,
    0x48, 0x1b, 0x90, 0xff, 0xe2, 0xa1, 0x37, 0x21,
    0xfa, 0x42, 0x7f, 0xff, 0xa5, 0x4, 0xc8, 0x7f,
    0xf0, 0x2f, 0x51, 0x7f, 0xfa, 0x54, 0xf4, 0x1f,
    0xe0,

    /* U+F242 "" */
    0xf, 0x95, 0x5f, 0xfd, 0x25, 0x7, 0xff, 0x15,
    0xf5, 0x17, 0xff, 0xa5, 0x4f, 0x48, 0x7f, 0xf0,
    0x28, 0x13, 0xff, 0xfd, 0x24, 0x27, 0x43, 0xfc,
    0x86, 0x71, 0xbd, 0x20, 0xbe, 0x80, 0xde, 0x90,
    0xfd, 0xa1, 0x37, 0xa4, 0x3f, 0xf8, 0x5a, 0x4,
    0x8, 0x72, 0x68, 0x10, 0xff, 0xe3, 0x3a, 0x1f,
    0xfe, 0x84, 0x3f, 0xfd, 0x28, 0x7f, 0xf0, 0xb4,
    0x8, 0x1d, 0x1d, 0x34, 0x8, 0x7f, 0xf1, 0x5a,
    0x21, 0xc8, 0x67, 0x1b, 0xd2, 0x6, 0xe4, 0xd,
    0xe9, 0xf, 0xe4, 0x26, 0xe4, 0x3f, 0x48, 0x4f,
    0xff, 0xf4, 0xa0, 0x99, 0xf, 0xfe, 0x5, 0xea,
    0x2f, 0xff, 0x4a, 0x9e, 0x83, 0xfc,

    /* U+F243 "" */
    0xf, 0x95, 0x5f, 0xfd, 0x35, 0x7, 0xff, 0x11,
    0xf5, 0x17, 0xff, 0xa7, 0x4e, 0x43, 0xff, 0x81,
    0x40, 0x9f, 0xff, 0xe9, 0x48, 0x19, 0xf, 0xf2,
    0x19, 0xc6, 0xf4, 0x82, 0xfa, 0x3, 0x7a, 0x41,
    0x7d, 0x8, 0x75, 0xe9, 0xf, 0xfe, 0x16, 0x81,
    0x2, 0x1c, 0x9a, 0x7, 0x10, 0xe4, 0x3f, 0x99,
    0xf, 0xff, 0x4e, 0x1f, 0xfe, 0x9c, 0x3f, 0xf8,
    0x3a, 0x4, 0xe, 0x8e, 0x9a, 0x7, 0x1d, 0x1d,
    0xf, 0xcd, 0xa1, 0xc8, 0x67, 0x1b, 0xd2, 0x6,
    0xe4, 0xd, 0xe9, 0x3, 0x72, 0x21, 0x9b, 0x90,
    0xfd, 0x21, 0x3f, 0xff, 0xd2, 0x90, 0x3a, 0x1f,
    0xfc, 0xb, 0xd4, 0x5f, 0xfe, 0x9d, 0xe9, 0xf,
    0xe0,

    /* U+F244 "" */
    0xf, 0x95, 0x5f, 0xfd, 0x25, 0x7, 0xff, 0x15,
    0xf5, 0x17, 0xff, 0xa5, 0x4f, 0x48, 0x7f, 0xf0,
    0x28, 0x13, 0x7f, 0xff, 0x45, 0x9, 0xd0, 0xff,
    0x21, 0x9d, 0xbf, 0xff, 0x9d, 0x3a, 0x13, 0x7a,
    0x43, 0xff, 0x98, 0xde, 0x83, 0xff, 0x96, 0xe8,
    0x7f, 0xf2, 0x15, 0x1, 0x1f, 0x54, 0x87, 0xff,
    0x19, 0xf, 0xfe, 0x4a, 0xa6, 0xa5, 0xba, 0x21,
    0xff, 0xc6, 0x43, 0xff, 0x85, 0x87, 0xff, 0x1,
    0xa9, 0xf, 0xf2, 0x1f, 0x9a, 0x21, 0xc8, 0x67,
    0x1f, 0xff, 0xe7, 0x40, 0x42, 0x6e, 0x43, 0xf4,
    0x84, 0xff, 0xff, 0x4a, 0x9, 0x90, 0xff, 0xe0,
    0x5e, 0xa2, 0xff, 0xf4, 0xa9, 0xe8, 0x3f, 0xc0,

    /* U+F245 "" */
    0xf, 0xfe, 0xeb, 0x72, 0x1f, 0xfd, 0x6, 0xe4,
    0x3f, 0xfa, 0xd, 0xc8, 0x7f, 0x9a, 0x21, 0xfc,
    0xda, 0x37, 0x21, 0xe7, 0x55, 0xc8, 0x7f, 0x50,
    0x26, 0x43, 0x9b, 0x91, 0xbb, 0x40, 0xf7, 0x1,
    0xf2, 0x1f, 0x9b, 0x91, 0x41, 0x94, 0x3e, 0x83,
    0xff, 0x84, 0xda, 0x1e, 0x78, 0x3f, 0xf8, 0xad,
    0xa1, 0xe7, 0x90, 0xff, 0xe0, 0xb7, 0x22, 0x82,
    0x58, 0x6e, 0x43, 0xe6, 0xe4, 0x7d, 0x68, 0x5d,
    0xc8, 0xdc, 0x1c, 0xd5, 0xe8, 0x3f, 0x9a, 0x20,
    0x78, 0x3e, 0x50, 0x7f, 0x9a, 0x23, 0xe8, 0x3f,
    0xf9, 0x6f, 0xa0, 0xff, 0xe5, 0xbe, 0x83, 0xff,
    0x96, 0xdc, 0x1f, 0xfc, 0x30,

    /* U+F246 "" */
    0xf, 0xf9, 0x7f, 0x7, 0xff, 0x11, 0x7f, 0x7,
    0xff, 0x15, 0xbe, 0xaf, 0xdf, 0x48, 0x79, 0xbe,
    0xaf, 0xdf, 0x48, 0x7f, 0x9e, 0x43, 0xff, 0x84,
    0xdf, 0xe9, 0xf, 0xfe, 0x13, 0x68, 0x7d, 0x40,
    0xff, 0xf0, 0x50, 0x39, 0xf, 0xff, 0x22, 0x19,
    0xf, 0xff, 0x22, 0x1d, 0x21, 0xff, 0xe0, 0x60,
    0xfa, 0x88, 0x7f, 0xf7, 0x1a, 0x7, 0xf3, 0x68,
    0x7f, 0xf6, 0x2e, 0x43, 0xff, 0x83, 0x79, 0xf,
    0xfe, 0x93, 0xe4, 0x3f, 0xf8, 0xf7, 0xa0, 0xff,
    0xe6, 0x5e, 0x83, 0xff, 0x9a, 0xfa, 0x43, 0xff,
    0x88, 0xde, 0x43, 0xff, 0xa6, 0xdc, 0x87, 0xf9,
    0xb9, 0xf, 0xfe, 0xcb, 0x72, 0x19, 0xb9, 0xf,
    0xfe, 0xfb, 0x7e, 0x90, 0xff, 0xe5, 0x80
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 253, .box_w = 54, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 81, .adv_w = 253, .box_w = 54, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 170, .adv_w = 253, .box_w = 54, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 264, .adv_w = 253, .box_w = 54, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 361, .adv_w = 253, .box_w = 54, .box_h = 11, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 457, .adv_w = 146, .box_w = 30, .box_h = 17, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 550, .adv_w = 256, .box_w = 54, .box_h = 15, .ofs_x = -1, .ofs_y = -2}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 62016, .range_length = 7, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 1
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t IconFont16px = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 17,          /*The maximum line height required by the font*/
    .base_line = 3,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_HOR,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};

#endif /*#if ICONFONT16PX*/

