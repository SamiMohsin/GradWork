#include "lvgl/lvgl.h"

/*******************************************************************************
 * Size: 12 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/

#ifndef LCDNOVA12PX
#define LCDNOVA12PX 1
#endif

#if LCDNOVA12PX

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+20 " " */

    /* U+21 "!" */
    0x1a, 0x21, 0x2b, 0x43, 0xff, 0x82, 0xd3, 0x46,
    0x9a, 0x4, 0x8, 0xee, 0x7, 0x8,

    /* U+22 "\"" */
    0x1a, 0x20, 0x68, 0x84, 0xad, 0x2, 0xb4, 0xa,
    0xd0, 0x2b, 0x40,

    /* U+23 "#" */
    0xf, 0xfe, 0xe5, 0xe8, 0x17, 0xa0, 0xff, 0xef,
    0xb7, 0xf2, 0xef, 0x2e, 0xfe, 0x90, 0xf3, 0x7e,
    0x97, 0x51, 0x75, 0xfa, 0x43, 0xff, 0x80, 0x86,
    0x50, 0x64, 0x3f, 0xf8, 0xd, 0xfc, 0xbb, 0xcb,
    0xbf, 0xa4, 0x3c, 0xdf, 0xa5, 0xd4, 0x5d, 0x7e,
    0x90, 0xff, 0xe0, 0x21, 0x94, 0x19, 0xf, 0xfe,
    0x3d, 0x60, 0x56, 0xf, 0xf0,

    /* U+24 "$" */
    0xf, 0xfe, 0x83, 0x72, 0x1f, 0xfc, 0x6, 0xf4,
    0x25, 0xe9, 0xf, 0x3c, 0x5e, 0xab, 0xd1, 0x68,
    0x7f, 0xf1, 0x1a, 0x90, 0xff, 0xe3, 0x28, 0x39,
    0xe2, 0xff, 0xd2, 0x1f, 0x9b, 0xff, 0x45, 0x10,
    0xf2, 0x1f, 0xfc, 0x4, 0x39, 0xe8, 0x87, 0xff,
    0x11, 0xe2, 0xf5, 0x5e, 0x8b, 0x43, 0xcd, 0xe8,
    0x4b, 0xd2, 0x1f, 0xfc, 0x6, 0xe4, 0x3f, 0x80,

    /* U+25 "%" */
    0x9, 0xbf, 0xd2, 0x1f, 0xfc, 0x97, 0x8b, 0xf4,
    0x5c, 0x1e, 0x6a, 0x43, 0xff, 0x8a, 0x87, 0xcd,
    0xc9, 0xa1, 0xff, 0xca, 0x6e, 0x55, 0xc8, 0x7f,
    0x3c, 0x5f, 0xc8, 0x19, 0x11, 0xbf, 0x48, 0x7e,
    0x6f, 0xd2, 0x13, 0x22, 0xaf, 0xd1, 0x70, 0x7f,
    0x37, 0x2a, 0xe7, 0xf, 0xc8, 0x7f, 0xf0, 0x1c,
    0x6e, 0x43, 0xff, 0x80, 0x87, 0xff, 0x1, 0xa9,
    0xf, 0x3c, 0x5f, 0xa2, 0xe0, 0x80,

    /* U+26 "&" */
    0x9, 0xbf, 0xe8, 0x3f, 0xf8, 0xf, 0x17, 0xfa,
    0xf, 0xfe, 0x6a, 0xc1, 0xff, 0xc8, 0x7a, 0x21,
    0xf3, 0x2a, 0xff, 0xa5, 0xaf, 0x41, 0x99, 0x57,
    0xfd, 0x2d, 0x7a, 0xf, 0xff, 0x43, 0xc5, 0xff,
    0x45, 0xa1, 0xe0,

    /* U+27 "'" */
    0x1a, 0x21, 0x2b, 0x40, 0xad,

    /* U+28 "(" */
    0x9, 0xbe, 0x43, 0x3c, 0x5e, 0x43, 0xff, 0xa0,
    0xd3, 0x43, 0xe6, 0x9a, 0x1f, 0xfd, 0x37, 0x8b,
    0xc8, 0x40,

    /* U+29 ")" */
    0x5, 0xf4, 0x87, 0xaf, 0x45, 0x10, 0xff, 0xe9,
    0xbd, 0xa1, 0xf3, 0xda, 0x1f, 0xfd, 0xb, 0xd1,
    0x44, 0x0,

    /* U+2A "*" */
    0xf, 0xf3, 0x21, 0x21, 0xf9, 0xbd, 0x24, 0x5f,
    0x21, 0xe4, 0xe8, 0x5d, 0x94, 0xc4, 0x39, 0x40,
    0xd1, 0x76, 0x5, 0x7, 0x9e, 0x6b, 0xc5, 0x41,
    0xf3, 0x79, 0x40, 0x55, 0xe8, 0x20,

    /* U+2B "+" */
    0xf, 0xfe, 0xb3, 0xe9, 0xf, 0xfe, 0xc3, 0x7f,
    0x4b, 0x5f, 0xd0, 0x79, 0xbf, 0x97, 0x5f, 0xd0,
    0x7f, 0xf0, 0x70, 0xff, 0xe5, 0xb5, 0x21, 0xfc,

    /* U+2C "," */
    0x3, 0x20, 0x67, 0x3, 0xe8,

    /* U+2D "-" */
    0x9, 0xbf, 0xf9, 0xf, 0x37, 0xff, 0x21, 0x0,

    /* U+2E "." */
    0xf, 0x9f, 0x48, 0xfa, 0x40,

    /* U+2F "/" */
    0xf, 0xfe, 0x3, 0x44, 0x3f, 0xf8, 0x2c, 0x88,
    0x7f, 0xf0, 0x28, 0x30, 0x7f, 0xcc, 0x94, 0xf,
    0xf9, 0xd2, 0x43, 0xfe, 0x75, 0x48, 0x7f, 0xcc,
    0xad, 0xf, 0xf9, 0x87, 0x43, 0xfe, 0x72, 0x88,
    0x7f, 0x0,

    /* U+30 "0" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xe9, 0x43,
    0x68, 0x7f, 0xf0, 0x1d, 0x14, 0x1f, 0xfc, 0x27,
    0x57, 0x83, 0xf3, 0x4d, 0x1d, 0x5a, 0xba, 0x21,
    0x9a, 0x6a, 0xd5, 0xa3, 0xd1, 0xf, 0xdc, 0xad,
    0xf, 0xfe, 0x12, 0x87, 0x43, 0xff, 0x80, 0xf2,
    0x6, 0xfd, 0x16, 0x84,

    /* U+31 "1" */
    0xf, 0xaf, 0xe9, 0xf, 0xfe, 0x25, 0xe9, 0xf,
    0xff, 0xd3, 0xda, 0x1f, 0xfc, 0x77, 0xb4, 0x3f,
    0xfe, 0x37, 0xf4, 0x45, 0xfd, 0x20,

    /* U+32 "2" */
    0xd, 0x7f, 0xf4, 0x87, 0xf5, 0xff, 0xa2, 0xd0,
    0xff, 0xf2, 0x37, 0xfe, 0x8b, 0x43, 0x3c, 0x5f,
    0xfa, 0x43, 0xff, 0xca, 0x8d, 0xff, 0xe8, 0x30,

    /* U+33 "3" */
    0x3, 0xff, 0xfc, 0x18, 0x3c, 0xff, 0xa4, 0xd,
    0xc1, 0xfe, 0x6e, 0x57, 0x21, 0xff, 0x32, 0xbd,
    0x7, 0xff, 0x6, 0x80, 0x7f, 0xa4, 0x3f, 0xaf,
    0xfd, 0x14, 0x43, 0xff, 0x8e, 0x87, 0xff, 0x39,
    0xbf, 0xfd, 0x16, 0x84,

    /* U+34 "4" */
    0xf, 0xfe, 0x3, 0xf5, 0x39, 0xf, 0xfe, 0x3,
    0x73, 0x78, 0x8, 0x7f, 0x9b, 0x8b, 0x90, 0xff,
    0xe0, 0xb4, 0x2e, 0x43, 0xff, 0x86, 0xe8, 0xdf,
    0xf4, 0xa9, 0xf, 0x37, 0xff, 0xd2, 0xa4, 0x3f,
    0xfe, 0xee, 0x21, 0xff, 0xc9, 0x79, 0x8,

    /* U+35 "5" */
    0x1b, 0xff, 0xf8, 0x12, 0x1e, 0x46, 0xff, 0xe9,
    0xf, 0xff, 0x1b, 0xc5, 0xff, 0xa4, 0x3f, 0x37,
    0xfe, 0x8a, 0x21, 0xff, 0xc7, 0x43, 0xff, 0x9f,
    0x7f, 0xfa, 0x2d, 0x8,

    /* U+36 "6" */
    0x9, 0xbf, 0xfa, 0xf, 0x9e, 0x2f, 0xfd, 0x7,
    0xff, 0x95, 0x95, 0x7f, 0xe9, 0xf, 0x32, 0xaf,
    0xfa, 0x28, 0x87, 0xff, 0x1d, 0xf, 0xfe, 0x73,
    0xc5, 0xff, 0x45, 0xa1, 0x0,

    /* U+37 "7" */
    0x5, 0xff, 0xfc, 0x19, 0xe, 0xbf, 0xfd, 0x21,
    0xff, 0xed, 0x6f, 0x45, 0x10, 0xff, 0x3c, 0x5e,
    0x90, 0xff, 0xf5, 0xa6, 0x87, 0xff, 0x11, 0xb4,
    0x3f, 0xc0,

    /* U+38 "8" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x89, 0x95, 0x7f, 0xd2, 0xa4, 0x33,
    0x2a, 0xff, 0xa5, 0x68, 0x7f, 0xf1, 0xd0, 0xff,
    0xe7, 0x3c, 0x5f, 0xf4, 0x5a, 0x10,

    /* U+39 "9" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x89, 0xe2, 0xff, 0xa5, 0x48, 0x79,
    0xbf, 0xf4, 0xad, 0xf, 0xfe, 0x3a, 0x1f, 0xfd,
    0x1b, 0xff, 0x45, 0xa1, 0x0,

    /* U+3A ":" */
    0xf, 0x9f, 0x48, 0xfa, 0x43, 0xf3, 0x20, 0x70,
    0x80,

    /* U+3B ";" */
    0xf, 0x9f, 0x48, 0xfa, 0x43, 0xf3, 0x20, 0x67,
    0x3, 0xe8,

    /* U+3C "<" */
    0xf, 0x9a, 0x21, 0xcd, 0xce, 0x84, 0xd1, 0x56,
    0x86, 0x74, 0x68, 0x1e, 0x6e, 0x57, 0x0,

    /* U+3D "=" */
    0x5, 0xff, 0xd0, 0x6b, 0xff, 0xa0, 0xd7, 0xff,
    0x41, 0xaf, 0xfe, 0x80,

    /* U+3E ">" */
    0x1a, 0x21, 0xf9, 0xcb, 0xc8, 0x79, 0xb9, 0xb9,
    0xc, 0xd1, 0x28, 0x81, 0xe6, 0xf2, 0x10,

    /* U+3F "?" */
    0x9, 0xbf, 0xfd, 0x21, 0xf3, 0x7f, 0xf4, 0x5a,
    0x1f, 0xfd, 0x94, 0x3f, 0xf8, 0xb7, 0xc3, 0x21,
    0xfe, 0x6c, 0xbd, 0x44, 0x3f, 0xfa, 0x8e, 0xe8,
    0x7f, 0xf1, 0x77, 0x43, 0xff, 0x8b, 0x72, 0x1f,
    0x80,

    /* U+40 "@" */
    0x9, 0xbf, 0xfa, 0xaf, 0xfe, 0x90, 0xf3, 0xc5,
    0xff, 0xaa, 0xff, 0xd1, 0x44, 0x3f, 0xf8, 0x4d,
    0xfa, 0x81, 0xff, 0xc4, 0x40, 0x84, 0xf1, 0x7e,
    0x79, 0xf, 0xfe, 0x13, 0x87, 0xff, 0x49, 0x5a,
    0x13, 0xc5, 0xf4, 0xa2, 0xfa, 0x28, 0x87, 0xff,
    0x9, 0xbf, 0xaa, 0xfe, 0x90, 0xff, 0xed, 0xbc,
    0x5f, 0xfa, 0xf, 0xfe, 0x30,

    /* U+41 "A" */
    0x9, 0xbf, 0xfe, 0x90, 0xcf, 0x17, 0xfd, 0x22,
    0x1f, 0xfe, 0x36, 0x55, 0xff, 0x4a, 0x90, 0xcc,
    0xab, 0xfe, 0x95, 0xa1, 0xff, 0xc7, 0x43, 0xff,
    0x9e, 0x81, 0xf, 0x90, 0x21, 0xcd, 0xc1, 0xfd,
    0x72, 0x10,

    /* U+42 "B" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb4,
    0x3f, 0xfc, 0x4c, 0xab, 0xfe, 0x95, 0x21, 0x99,
    0x57, 0xfd, 0x2b, 0x43, 0xff, 0x8e, 0x87, 0xff,
    0x3d, 0x1b, 0xfe, 0x8b, 0x42,

    /* U+43 "C" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x11, 0xd9, 0xf, 0xfe, 0x2b, 0x21,
    0xcd, 0x34, 0x3f, 0xf8, 0x8d, 0x34, 0x3f, 0xfa,
    0x2c, 0x87, 0xff, 0x15, 0xd9, 0xc, 0xf1, 0x7f,
    0xd1, 0x68, 0x40,

    /* U+44 "D" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb4,
    0x3f, 0xfc, 0x4d, 0x34, 0x3e, 0x7a, 0x21, 0x9a,
    0x68, 0x7c, 0xf4, 0x43, 0xff, 0xc6, 0x8d, 0xff,
    0x45, 0xa1, 0x0,

    /* U+45 "E" */
    0x1b, 0xff, 0xe9, 0xc, 0x8d, 0xff, 0xa4, 0x3f,
    0xfb, 0x6c, 0xab, 0xff, 0x48, 0x4c, 0xab, 0xff,
    0x48, 0x7f, 0xf7, 0x11, 0xbf, 0xf4, 0x80,

    /* U+46 "F" */
    0x1b, 0xff, 0xe9, 0xc, 0x8d, 0xff, 0xa4, 0x3f,
    0xfb, 0x6c, 0xab, 0xff, 0x48, 0x4c, 0xab, 0xff,
    0x48, 0x7f, 0xf7, 0x10, 0x21, 0xff, 0xc1, 0x6e,
    0xf, 0xfe, 0x8,

    /* U+47 "G" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x11, 0xd9, 0xf, 0xfe, 0x2b, 0x21,
    0xcd, 0x34, 0xd, 0xfe, 0x90, 0xcd, 0x34, 0xd,
    0xf4, 0x88, 0x7f, 0xf8, 0xde, 0x2f, 0xfa, 0x2d,
    0x8,

    /* U+48 "H" */
    0x1a, 0x21, 0xfc, 0xd1, 0xe, 0x56, 0x87, 0xce,
    0xa0, 0xff, 0xf1, 0xb2, 0xaf, 0xfa, 0x54, 0x86,
    0x65, 0x5f, 0xf4, 0xad, 0xf, 0xfe, 0x3a, 0x1f,
    0xfc, 0xf4, 0x8, 0x7c, 0x81, 0xe, 0x6e, 0xf,
    0xeb, 0x90, 0x80,

    /* U+49 "I" */
    0x5, 0xfd, 0x37, 0xf2, 0x1e, 0xbf, 0x44, 0x5f,
    0x90, 0xff, 0xf4, 0xbd, 0xa1, 0xff, 0xc4, 0x7b,
    0x43, 0xff, 0xd3, 0x7e, 0x88, 0xbf, 0x21, 0x80,

    /* U+4A "J" */
    0xf, 0xfe, 0x13, 0x44, 0x3f, 0xf8, 0x8e, 0xa0,
    0xff, 0xf7, 0xb5, 0x21, 0x9f, 0x48, 0x7c, 0xd4,
    0x87, 0xff, 0x89, 0xe2, 0xff, 0xa2, 0xd0, 0x80,

    /* U+4B "K" */
    0x1a, 0x21, 0xe6, 0xf4, 0x1f, 0x2b, 0x42, 0x79,
    0x54, 0xf, 0xf9, 0xb9, 0xb9, 0xf, 0xf3, 0x46,
    0xe4, 0x3f, 0xcc, 0x86, 0xbf, 0xa4, 0x3c, 0xca,
    0xbf, 0xe8, 0xa2, 0x1f, 0xfc, 0x74, 0x3f, 0xf9,
    0xe8, 0x10, 0xf9, 0x2, 0x1c, 0xdc, 0x1f, 0xd7,
    0x21, 0x0,

    /* U+4C "L" */
    0x1a, 0x21, 0xff, 0xc3, 0x56, 0x87, 0xff, 0x95,
    0xa6, 0x87, 0xff, 0x5, 0xa6, 0x87, 0xff, 0x99,
    0x1b, 0xff, 0x48, 0x0,

    /* U+4D "M" */
    0x2, 0x83, 0xff, 0x8a, 0xa0, 0xe6, 0x9f, 0xa0,
    0xf9, 0xfd, 0x50, 0x7c, 0xd1, 0x5c, 0x13, 0xcd,
    0x10, 0xff, 0xe0, 0x34, 0x57, 0xd3, 0x45, 0x7,
    0xf2, 0xb4, 0xd, 0xcd, 0x48, 0x5a, 0xb0, 0xf2,
    0x1f, 0x32, 0x83, 0xff, 0x84, 0x9a, 0x1f, 0xfc,
    0x2d, 0x58, 0x7f, 0xfb, 0x9f, 0x48, 0x7f, 0xf0,
    0xaf, 0x41, 0x0,

    /* U+4E "N" */
    0xf, 0xfe, 0x53, 0x72, 0xc1, 0xeb, 0x90, 0xe4,
    0x1e, 0xb8, 0x24, 0x8, 0x7f, 0x74, 0x57, 0x21,
    0xff, 0xc3, 0x6d, 0x54, 0x43, 0xe6, 0x9a, 0x1a,
    0xfa, 0xa4, 0x33, 0x4d, 0xf, 0x9e, 0x88, 0x7f,
    0xf8, 0xd3, 0x43, 0xe4, 0x8, 0x73, 0x68, 0x7f,
    0x5c, 0x84,

    /* U+4F "O" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x89, 0xa6, 0x87, 0xcf, 0x44, 0x33,
    0x4d, 0xf, 0x9e, 0x88, 0x7f, 0xf8, 0x9e, 0x2f,
    0xfa, 0x2d, 0x8,

    /* U+50 "P" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb8,
    0x3f, 0xf8, 0x88, 0x7f, 0xf4, 0x59, 0x57, 0xfe,
    0x55, 0x3, 0x32, 0xaf, 0xfe, 0x90, 0xff, 0xf2,
    0x20, 0x43, 0xff, 0x88, 0xdc, 0x1f, 0xfc, 0x40,

    /* U+51 "Q" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x89, 0xa6, 0x87, 0xcf, 0x44, 0x33,
    0x4d, 0xf, 0x9e, 0x88, 0x7f, 0xf0, 0x10, 0xff,
    0xe3, 0x35, 0x21, 0xfe, 0x78, 0xb9, 0x6b, 0x8b,
    0x43, 0xcd, 0xe9, 0x6b, 0xd2, 0x1f, 0xfc, 0x6,
    0x85, 0xe8, 0x3f, 0xf8, 0x6d, 0xf4, 0x1e,

    /* U+52 "R" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb4,
    0x3f, 0xfc, 0x4c, 0xab, 0xfe, 0x8b, 0x43, 0x32,
    0x12, 0xaf, 0xd2, 0x1f, 0xcd, 0x6, 0x88, 0x7f,
    0xf0, 0xdb, 0x8b, 0x90, 0xfc, 0xad, 0x9, 0xb8,
    0xb8, 0x30,

    /* U+53 "S" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x11, 0xa9, 0xf, 0xfe, 0x32, 0x83,
    0x9e, 0x2f, 0xfd, 0x21, 0xf9, 0xbf, 0xf4, 0x51,
    0xf, 0x21, 0xff, 0xc0, 0x43, 0x9e, 0x88, 0x7f,
    0xf1, 0x1e, 0x2f, 0xfa, 0x2d, 0x8,

    /* U+54 "T" */
    0x9, 0xbf, 0xd5, 0xbf, 0xd2, 0x19, 0xbf, 0xc2,
    0x8f, 0xf4, 0x87, 0xff, 0xc2, 0xac, 0x3f, 0xf9,
    0x15, 0x61, 0xff, 0xf8, 0xd5, 0x87, 0xf0,

    /* U+55 "U" */
    0x1a, 0x21, 0xfc, 0xd1, 0xe, 0x56, 0x87, 0xce,
    0xa0, 0xff, 0xf1, 0xb4, 0xd0, 0xf9, 0xe8, 0x86,
    0x69, 0xa1, 0xf3, 0xd1, 0xf, 0xff, 0x13, 0xc5,
    0xff, 0x45, 0xa1, 0x0,

    /* U+56 "V" */
    0x1a, 0x21, 0xf9, 0xa2, 0x12, 0xb4, 0x3c, 0xea,
    0xf, 0xfe, 0xdb, 0x4d, 0xe, 0x71, 0x90, 0x34,
    0xd0, 0x37, 0x26, 0x87, 0xdd, 0xca, 0xb9, 0xf,
    0x94, 0x37, 0x21, 0xf9, 0x6e, 0x88, 0x7f, 0x0,

    /* U+57 "W" */
    0xf, 0xfe, 0x83, 0xe9, 0xf, 0xfe, 0x15, 0xe8,
    0x3f, 0xfd, 0xe9, 0xa1, 0xff, 0xc2, 0xd5, 0x87,
    0x90, 0xf9, 0x94, 0x1f, 0xfc, 0x25, 0x68, 0x1b,
    0x9a, 0x90, 0xb5, 0x61, 0xfc, 0xd1, 0x5f, 0x4d,
    0x14, 0x1f, 0xf3, 0x45, 0x70, 0x4f, 0x34, 0x43,
    0xe6, 0x9f, 0xa0, 0xf9, 0xfd, 0x50, 0x40,

    /* U+58 "X" */
    0x1f, 0x41, 0xfe, 0xbc, 0x84, 0xca, 0xd0, 0xf3,
    0x2a, 0x43, 0x32, 0x51, 0x3, 0x45, 0x48, 0x7d,
    0x45, 0x56, 0x55, 0x3, 0xfc, 0xcb, 0xe9, 0xf,
    0xf9, 0x97, 0xd2, 0x1f, 0xea, 0x2a, 0xb2, 0xa8,
    0x1f, 0x32, 0x51, 0x3, 0x41, 0x90, 0xcc, 0xad,
    0xf, 0x3a, 0xa4, 0x0,

    /* U+59 "Y" */
    0x1a, 0x21, 0xfc, 0xd1, 0xe, 0x56, 0x87, 0xce,
    0xa0, 0xff, 0xf1, 0xbc, 0x5f, 0xf4, 0xa9, 0xf,
    0x37, 0xfe, 0x95, 0xa1, 0xff, 0xc7, 0x43, 0xff,
    0x9f, 0x7f, 0xfa, 0x2d, 0x8,

    /* U+5A "Z" */
    0x9, 0xbf, 0xff, 0x85, 0x7, 0xcd, 0xff, 0xe9,
    0x18, 0x3f, 0xf8, 0xad, 0x15, 0x7, 0xff, 0x11,
    0xa2, 0xa8, 0x1f, 0xfc, 0x47, 0x2e, 0x43, 0xff,
    0x84, 0xdc, 0x68, 0x7f, 0xf0, 0xda, 0x2a, 0x88,
    0x7f, 0xf0, 0xdd, 0x54, 0x43, 0xff, 0x88, 0xe8,
    0xdf, 0xfe, 0x83, 0x0,

    /* U+5B "[" */
    0x1b, 0xf9, 0xe, 0x46, 0xf2, 0x1f, 0xfd, 0x6,
    0x9a, 0x1f, 0x34, 0xd0, 0xff, 0xea, 0x23, 0x79,
    0x8,

    /* U+5C "\\" */
    0x9, 0xb4, 0x3f, 0xf8, 0x4e, 0x51, 0xf, 0xfe,
    0xb, 0xe, 0x87, 0xff, 0x5, 0x95, 0xa1, 0xff,
    0xc1, 0x75, 0x68, 0x7f, 0xf0, 0x5d, 0x52, 0x1f,
    0xfc, 0x16, 0x4a, 0x7, 0xff, 0xa, 0x83, 0x7,
    0xff, 0x9, 0x91, 0x0,

    /* U+5D "]" */
    0x9, 0xbf, 0xa4, 0x26, 0xf4, 0x1f, 0xfc, 0xc4,
    0x3f, 0xcf, 0x68, 0x7c, 0xf6, 0x87, 0xe4, 0x3f,
    0xf8, 0xcd, 0xe8, 0x30,

    /* U+5E "^" */
    0xf, 0xfe, 0x8b, 0x52, 0x1f, 0xfc, 0x17, 0xd0,
    0x57, 0x21, 0xfa, 0xe6, 0xea, 0xe2, 0xd0, 0x80,

    /* U+5F "_" */
    0x9, 0xbf, 0xff, 0x98, 0x87, 0x9b, 0xff, 0xf9,
    0x88, 0x40,

    /* U+60 "`" */
    0x9, 0x60, 0xff, 0x77, 0x90, 0xf3, 0x71, 0x44,

    /* U+61 "a" */
    0x9, 0xbf, 0xfe, 0x90, 0xcf, 0x17, 0xfd, 0x22,
    0x1f, 0xfe, 0x36, 0x55, 0xff, 0x4a, 0x90, 0xcc,
    0xab, 0xfe, 0x95, 0xa1, 0xff, 0xc7, 0x43, 0xff,
    0x9e, 0x81, 0xf, 0x90, 0x21, 0xcd, 0xc1, 0xfd,
    0x72, 0x10,

    /* U+62 "b" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb4,
    0x3f, 0xfc, 0x4c, 0xab, 0xfe, 0x95, 0x21, 0x99,
    0x57, 0xfd, 0x2b, 0x43, 0xff, 0x8e, 0x87, 0xff,
    0x3d, 0x1b, 0xfe, 0x8b, 0x42,

    /* U+63 "c" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x11, 0xd9, 0xf, 0xfe, 0x2b, 0x21,
    0xcd, 0x34, 0x3f, 0xf8, 0x8d, 0x34, 0x3f, 0xfa,
    0x2c, 0x87, 0xff, 0x15, 0xd9, 0xc, 0xf1, 0x7f,
    0xd1, 0x68, 0x40,

    /* U+64 "d" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb4,
    0x3f, 0xfc, 0x4d, 0x34, 0x3e, 0x7a, 0x21, 0x9a,
    0x68, 0x7c, 0xf4, 0x43, 0xff, 0xc6, 0x8d, 0xff,
    0x45, 0xa1, 0x0,

    /* U+65 "e" */
    0x1b, 0xff, 0xe9, 0xc, 0x8d, 0xff, 0xa4, 0x3f,
    0xfb, 0x6c, 0xab, 0xff, 0x48, 0x4c, 0xab, 0xff,
    0x48, 0x7f, 0xf7, 0x11, 0xbf, 0xf4, 0x80,

    /* U+66 "f" */
    0x1b, 0xff, 0xe9, 0xc, 0x8d, 0xff, 0xa4, 0x3f,
    0xfb, 0x6c, 0xab, 0xff, 0x48, 0x4c, 0xab, 0xff,
    0x48, 0x7f, 0xf7, 0x10, 0x21, 0xff, 0xc1, 0x6e,
    0xf, 0xfe, 0x8,

    /* U+67 "g" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x11, 0xd9, 0xf, 0xfe, 0x2b, 0x21,
    0xcd, 0x34, 0xd, 0xfe, 0x90, 0xcd, 0x34, 0xd,
    0xf4, 0x88, 0x7f, 0xf8, 0xde, 0x2f, 0xfa, 0x2d,
    0x8,

    /* U+68 "h" */
    0x1a, 0x21, 0xfc, 0xd1, 0xe, 0x56, 0x87, 0xce,
    0xa0, 0xff, 0xf1, 0xb2, 0xaf, 0xfa, 0x54, 0x86,
    0x65, 0x5f, 0xf4, 0xad, 0xf, 0xfe, 0x3a, 0x1f,
    0xfc, 0xf4, 0x8, 0x7c, 0x81, 0xe, 0x6e, 0xf,
    0xeb, 0x90, 0x80,

    /* U+69 "i" */
    0x5, 0xfd, 0x37, 0xf2, 0x1e, 0xbf, 0x44, 0x5f,
    0x90, 0xff, 0xf4, 0xbd, 0xa1, 0xff, 0xc4, 0x7b,
    0x43, 0xff, 0xd3, 0x7e, 0x88, 0xbf, 0x21, 0x80,

    /* U+6A "j" */
    0xf, 0xfe, 0x13, 0x44, 0x3f, 0xf8, 0x8e, 0xa0,
    0xff, 0xf7, 0xb5, 0x21, 0x9f, 0x48, 0x7c, 0xd4,
    0x87, 0xff, 0x89, 0xe2, 0xff, 0xa2, 0xd0, 0x80,

    /* U+6B "k" */
    0x1a, 0x21, 0xe6, 0xf4, 0x1f, 0x2b, 0x42, 0x79,
    0x54, 0xf, 0xf9, 0xb9, 0xb9, 0xf, 0xf3, 0x46,
    0xe4, 0x3f, 0xcc, 0x86, 0xbf, 0xa4, 0x3c, 0xca,
    0xbf, 0xe8, 0xa2, 0x1f, 0xfc, 0x74, 0x3f, 0xf9,
    0xe8, 0x10, 0xf9, 0x2, 0x1c, 0xdc, 0x1f, 0xd7,
    0x21, 0x0,

    /* U+6C "l" */
    0x1a, 0x21, 0xff, 0xc3, 0x56, 0x87, 0xff, 0x95,
    0xa6, 0x87, 0xff, 0x5, 0xa6, 0x87, 0xff, 0x99,
    0x1b, 0xff, 0x48, 0x0,

    /* U+6D "m" */
    0x2, 0x83, 0xff, 0x8a, 0xa0, 0xe6, 0x9f, 0xa0,
    0xf9, 0xfd, 0x50, 0x7c, 0xd1, 0x5c, 0x13, 0xcd,
    0x10, 0xff, 0xe0, 0x34, 0x57, 0xd3, 0x45, 0x7,
    0xf2, 0xb4, 0xd, 0xcd, 0x48, 0x5a, 0xb0, 0xf2,
    0x1f, 0x32, 0x83, 0xff, 0x84, 0x9a, 0x1f, 0xfc,
    0x2d, 0x58, 0x7f, 0xfb, 0x9f, 0x48, 0x7f, 0xf0,
    0xaf, 0x41, 0x0,

    /* U+6E "n" */
    0xf, 0xfe, 0x53, 0x72, 0xc1, 0xeb, 0x90, 0xe4,
    0x1e, 0xb8, 0x24, 0x8, 0x7f, 0x74, 0x57, 0x21,
    0xff, 0xc3, 0x6d, 0x54, 0x43, 0xe6, 0x9a, 0x1a,
    0xfa, 0xa4, 0x33, 0x4d, 0xf, 0x9e, 0x88, 0x7f,
    0xf8, 0xd3, 0x43, 0xe4, 0x8, 0x73, 0x68, 0x7f,
    0x5c, 0x84,

    /* U+6F "o" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x89, 0xa6, 0x87, 0xcf, 0x44, 0x33,
    0x4d, 0xf, 0x9e, 0x88, 0x7f, 0xf8, 0x9e, 0x2f,
    0xfa, 0x2d, 0x8,

    /* U+70 "p" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb8,
    0x3f, 0xf8, 0x88, 0x7f, 0xf4, 0x59, 0x57, 0xfe,
    0x55, 0x3, 0x32, 0xaf, 0xfe, 0x90, 0xff, 0xf2,
    0x20, 0x43, 0xff, 0x88, 0xdc, 0x1f, 0xfc, 0x40,

    /* U+71 "q" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x89, 0xa6, 0x87, 0xcf, 0x44, 0x33,
    0x4d, 0xf, 0x9e, 0x88, 0x7f, 0xf0, 0x10, 0xff,
    0xe3, 0x35, 0x21, 0xfe, 0x78, 0xb9, 0x6b, 0x8b,
    0x43, 0xcd, 0xe9, 0x6b, 0xd2, 0x1f, 0xfc, 0x6,
    0x85, 0xe8, 0x3f, 0xf8, 0x6d, 0xf4, 0x1e,

    /* U+72 "r" */
    0x1b, 0xff, 0xe9, 0xf, 0x91, 0xbf, 0xe8, 0xb4,
    0x3f, 0xfc, 0x4c, 0xab, 0xfe, 0x8b, 0x43, 0x32,
    0x12, 0xaf, 0xd2, 0x1f, 0xcd, 0x6, 0x88, 0x7f,
    0xf0, 0xdb, 0x8b, 0x90, 0xfc, 0xad, 0x9, 0xb8,
    0xb8, 0x30,

    /* U+73 "s" */
    0x9, 0xbf, 0xfa, 0x43, 0xcf, 0x17, 0xfd, 0x16,
    0x87, 0xff, 0x11, 0xa9, 0xf, 0xfe, 0x32, 0x83,
    0x9e, 0x2f, 0xfd, 0x21, 0xf9, 0xbf, 0xf4, 0x51,
    0xf, 0x21, 0xff, 0xc0, 0x43, 0x9e, 0x88, 0x7f,
    0xf1, 0x1e, 0x2f, 0xfa, 0x2d, 0x8,

    /* U+74 "t" */
    0x9, 0xbf, 0xd5, 0xbf, 0xd2, 0x19, 0xbf, 0xc2,
    0x8f, 0xf4, 0x87, 0xff, 0xc2, 0xac, 0x3f, 0xf9,
    0x15, 0x61, 0xff, 0xf8, 0xd5, 0x87, 0xf0,

    /* U+75 "u" */
    0x1a, 0x21, 0xfc, 0xd1, 0xe, 0x56, 0x87, 0xce,
    0xa0, 0xff, 0xf1, 0xb4, 0xd0, 0xf9, 0xe8, 0x86,
    0x69, 0xa1, 0xf3, 0xd1, 0xf, 0xff, 0x13, 0xc5,
    0xff, 0x45, 0xa1, 0x0,

    /* U+76 "v" */
    0x1a, 0x21, 0xf9, 0xa2, 0x12, 0xb4, 0x3c, 0xea,
    0xf, 0xfe, 0xdb, 0x4d, 0xe, 0x71, 0x90, 0x34,
    0xd0, 0x37, 0x26, 0x87, 0xdd, 0xca, 0xb9, 0xf,
    0x94, 0x37, 0x21, 0xf9, 0x6e, 0x88, 0x7f, 0x0,

    /* U+77 "w" */
    0xf, 0xfe, 0x83, 0xe9, 0xf, 0xfe, 0x15, 0xe8,
    0x3f, 0xfd, 0xe9, 0xa1, 0xff, 0xc2, 0xd5, 0x87,
    0x90, 0xf9, 0x94, 0x1f, 0xfc, 0x25, 0x68, 0x1b,
    0x9a, 0x90, 0xb5, 0x61, 0xfc, 0xd1, 0x5f, 0x4d,
    0x14, 0x1f, 0xf3, 0x45, 0x70, 0x4f, 0x34, 0x43,
    0xe6, 0x9f, 0xa0, 0xf9, 0xfd, 0x50, 0x40,

    /* U+78 "x" */
    0x1f, 0x41, 0xfe, 0xbc, 0x84, 0xca, 0xd0, 0xf3,
    0x2a, 0x43, 0x32, 0x51, 0x3, 0x45, 0x48, 0x7d,
    0x45, 0x56, 0x55, 0x3, 0xfc, 0xcb, 0xe9, 0xf,
    0xf9, 0x97, 0xd2, 0x1f, 0xea, 0x2a, 0xb2, 0xa8,
    0x1f, 0x32, 0x51, 0x3, 0x41, 0x90, 0xcc, 0xad,
    0xf, 0x3a, 0xa4, 0x0,

    /* U+79 "y" */
    0x1a, 0x21, 0xfc, 0xd1, 0xe, 0x56, 0x87, 0xce,
    0xa0, 0xff, 0xf1, 0xbc, 0x5f, 0xf4, 0xa9, 0xf,
    0x37, 0xfe, 0x95, 0xa1, 0xff, 0xc7, 0x43, 0xff,
    0x9f, 0x7f, 0xfa, 0x2d, 0x8,

    /* U+7A "z" */
    0x9, 0xbf, 0xff, 0x85, 0x7, 0xcd, 0xff, 0xe9,
    0x18, 0x3f, 0xf8, 0xad, 0x15, 0x7, 0xff, 0x11,
    0xa2, 0xa8, 0x1f, 0xfc, 0x47, 0x2e, 0x43, 0xff,
    0x84, 0xdc, 0x68, 0x7f, 0xf0, 0xda, 0x2a, 0x88,
    0x7f, 0xf0, 0xdd, 0x54, 0x43, 0xff, 0x88, 0xe8,
    0xdf, 0xfe, 0x83, 0x0,

    /* U+7B "{" */
    0xf, 0xe6, 0xf9, 0xf, 0xf5, 0xc5, 0xe4, 0x3f,
    0xf8, 0x48, 0x7f, 0xf3, 0xdb, 0xca, 0xa0, 0x7f,
    0x9b, 0x95, 0x40, 0xff, 0xe0, 0xa1, 0xff, 0xca,
    0x43, 0xff, 0x83, 0x71, 0x79, 0x8,

    /* U+7C "|" */
    0x1a, 0x21, 0x2b, 0x43, 0xff, 0x82, 0xd3, 0x46,
    0x9a, 0x1f, 0xfc, 0x25, 0x68,

    /* U+7D "}" */
    0x9, 0xbe, 0x90, 0xff, 0x9b, 0xd3, 0x44, 0x3f,
    0xfa, 0x88, 0x7f, 0xf1, 0x1d, 0x57, 0x21, 0xfe,
    0x75, 0x5c, 0x87, 0xfc, 0x87, 0xff, 0x49, 0xbd,
    0x34, 0x43, 0xc0,

    /* U+7E "~" */
    0xf, 0x97, 0xe0, 0xfc, 0xb0, 0x79, 0xba, 0x7d,
    0x4e, 0x9, 0xf5, 0x87, 0xa8, 0xab, 0xab, 0x95,
    0xf4, 0x5c, 0x80
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 49, .box_w = 6, .box_h = 0, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 0, .adv_w = 35, .box_w = 6, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 14, .adv_w = 66, .box_w = 12, .box_h = 3, .ofs_x = 0, .ofs_y = 6},
    {.bitmap_index = 25, .adv_w = 128, .box_w = 30, .box_h = 10, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 78, .adv_w = 101, .box_w = 21, .box_h = 13, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 134, .adv_w = 166, .box_w = 33, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 196, .adv_w = 114, .box_w = 24, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 231, .adv_w = 35, .box_w = 6, .box_h = 3, .ofs_x = 0, .ofs_y = 6},
    {.bitmap_index = 236, .adv_w = 58, .box_w = 12, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 254, .adv_w = 58, .box_w = 12, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 272, .adv_w = 86, .box_w = 21, .box_h = 6, .ofs_x = -1, .ofs_y = 1},
    {.bitmap_index = 302, .adv_w = 98, .box_w = 24, .box_h = 7, .ofs_x = -1, .ofs_y = 1},
    {.bitmap_index = 326, .adv_w = 35, .box_w = 6, .box_h = 3, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 331, .adv_w = 68, .box_w = 18, .box_h = 2, .ofs_x = -1, .ofs_y = 3},
    {.bitmap_index = 339, .adv_w = 35, .box_w = 6, .box_h = 3, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 344, .adv_w = 71, .box_w = 18, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 378, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 422, .adv_w = 101, .box_w = 24, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 444, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 468, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 504, .adv_w = 101, .box_w = 24, .box_h = 10, .ofs_x = -1, .ofs_y = -1},
    {.bitmap_index = 543, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 571, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 600, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 626, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 656, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 685, .adv_w = 35, .box_w = 6, .box_h = 6, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 694, .adv_w = 35, .box_w = 6, .box_h = 7, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 704, .adv_w = 66, .box_w = 12, .box_h = 5, .ofs_x = 0, .ofs_y = 2},
    {.bitmap_index = 719, .adv_w = 80, .box_w = 15, .box_h = 4, .ofs_x = 0, .ofs_y = 2},
    {.bitmap_index = 731, .adv_w = 66, .box_w = 12, .box_h = 5, .ofs_x = 0, .ofs_y = 2},
    {.bitmap_index = 746, .adv_w = 91, .box_w = 21, .box_h = 10, .ofs_x = -1, .ofs_y = -1},
    {.bitmap_index = 779, .adv_w = 164, .box_w = 33, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 832, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 866, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 895, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 930, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 957, .adv_w = 86, .box_w = 18, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 980, .adv_w = 86, .box_w = 18, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1007, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1040, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1075, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1099, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1123, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1165, .adv_w = 83, .box_w = 18, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1185, .adv_w = 134, .box_w = 27, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1236, .adv_w = 101, .box_w = 21, .box_h = 11, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1278, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1305, .adv_w = 102, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1337, .adv_w = 101, .box_w = 21, .box_h = 12, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 1384, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1418, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1456, .adv_w = 107, .box_w = 24, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 1479, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1507, .adv_w = 96, .box_w = 18, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1539, .adv_w = 134, .box_w = 27, .box_h = 10, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1586, .adv_w = 107, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1630, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1659, .adv_w = 95, .box_w = 24, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 1703, .adv_w = 51, .box_w = 12, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1720, .adv_w = 71, .box_w = 18, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 1756, .adv_w = 51, .box_w = 12, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 1776, .adv_w = 79, .box_w = 21, .box_h = 4, .ofs_x = -1, .ofs_y = 6},
    {.bitmap_index = 1792, .adv_w = 145, .box_w = 33, .box_h = 2, .ofs_x = -1, .ofs_y = -3},
    {.bitmap_index = 1802, .adv_w = 40, .box_w = 12, .box_h = 3, .ofs_x = -1, .ofs_y = 7},
    {.bitmap_index = 1810, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1844, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1873, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1908, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1935, .adv_w = 86, .box_w = 18, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 1958, .adv_w = 86, .box_w = 18, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 1985, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2018, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 2053, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2077, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2101, .adv_w = 101, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 2143, .adv_w = 83, .box_w = 18, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2163, .adv_w = 134, .box_w = 27, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 2214, .adv_w = 101, .box_w = 21, .box_h = 11, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 2256, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2283, .adv_w = 102, .box_w = 21, .box_h = 10, .ofs_x = 0, .ofs_y = -1},
    {.bitmap_index = 2315, .adv_w = 101, .box_w = 21, .box_h = 12, .ofs_x = 0, .ofs_y = -3},
    {.bitmap_index = 2362, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2396, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2434, .adv_w = 107, .box_w = 24, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 2457, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2485, .adv_w = 96, .box_w = 18, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2517, .adv_w = 134, .box_w = 27, .box_h = 10, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2564, .adv_w = 107, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2608, .adv_w = 101, .box_w = 21, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2637, .adv_w = 95, .box_w = 24, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 2681, .adv_w = 66, .box_w = 18, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 2711, .adv_w = 35, .box_w = 6, .box_h = 9, .ofs_x = 0, .ofs_y = 0},
    {.bitmap_index = 2724, .adv_w = 66, .box_w = 18, .box_h = 9, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 2751, .adv_w = 118, .box_w = 27, .box_h = 3, .ofs_x = -1, .ofs_y = 3}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 32, .range_length = 95, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 1
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t LcdNova12px = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 14,          /*The maximum line height required by the font*/
    .base_line = 3,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_HOR,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};

#endif /*#if LCDNOVA12PX*/

