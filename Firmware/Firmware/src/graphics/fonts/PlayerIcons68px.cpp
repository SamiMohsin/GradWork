#include "lvgl/lvgl.h"

/*******************************************************************************
 * Size: 68 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/

#ifndef PLAYERICONS68PX
#define PLAYERICONS68PX 1
#endif

#if PLAYERICONS68PX

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+E800 "" */
    0xf, 0xfe, 0x62, 0xa4, 0x3f, 0xff, 0xe1, 0xfd,
    0xb7, 0x21, 0xff, 0xff, 0xf, 0xf3, 0x7a, 0x43,
    0xff, 0xfe, 0x4, 0x3e, 0x6e, 0x43, 0xff, 0xfb,
    0x87, 0xfc, 0xde, 0x90, 0xff, 0xfc, 0x21, 0xff,
    0xc4, 0x6f, 0x48, 0x7f, 0xff, 0xc3, 0xfc, 0xdc,
    0x87, 0xff, 0xc9, 0xf, 0xfe, 0x53, 0x7a, 0x43,
    0xff, 0xdb, 0x87, 0xff, 0x3d, 0xb9, 0xf, 0xff,
    0x4a, 0x1f, 0xfd, 0x36, 0xf4, 0x87, 0xff, 0xfc,
    0x3f, 0xcd, 0xe9, 0xf, 0xff, 0xf8, 0x7f, 0x9b,
    0x90, 0xff, 0xff, 0x87, 0xf9, 0xbd, 0x21, 0xff,
    0xff, 0xf, 0xf3, 0x72, 0x1f, 0xff, 0xf0, 0xff,
    0x37, 0xa4, 0x3f, 0xff, 0xe1, 0xfe, 0x6f, 0x48,
    0x7f, 0xff, 0xc3, 0xfc, 0xda, 0x1f, 0xff, 0xf0,
    0xfc, 0xda, 0x1f, 0xfc, 0xe4, 0x3f, 0xfd, 0xd,
    0xe9, 0xf, 0xfe, 0x7e, 0x1f, 0xfe, 0x56, 0xf4,
    0x87, 0xff, 0x49, 0xf, 0xff, 0x1b, 0x72, 0x1f,
    0xfd, 0x6d, 0xf, 0xfe, 0xf3, 0x7a, 0x43, 0xff,
    0xb0, 0x87, 0xff, 0x75, 0xb9, 0xf, 0xfe, 0xdb,
    0xa1, 0xff, 0xd8, 0x6f, 0x48, 0x7f, 0xf7, 0xb4,
    0x3f, 0xfa, 0xad, 0xe9, 0xf, 0xff, 0xa, 0x1f,
    0xfd, 0x46, 0xe4, 0x3f, 0xfc, 0x8e, 0x87, 0xff,
    0x3d, 0xbd, 0x21, 0xff, 0xe6, 0x74, 0x3f, 0xf9,
    0xad, 0xc8, 0x7f, 0xfa, 0x5d, 0xf, 0xfe, 0x53,
    0x7a, 0x43, 0xff, 0xd6, 0xe8, 0x7f, 0xf1, 0xdb,
    0xd2, 0x1f, 0xfe, 0xe7, 0x43, 0xff, 0x8a, 0xdc,
    0x87, 0xff, 0xc5, 0x90, 0xff, 0xe1, 0x37, 0xa4,
    0x3f, 0xfe, 0x74, 0xf, 0xfe, 0x3, 0x7a, 0x43,
    0xff, 0xea, 0xc8, 0x7f, 0x9b, 0x90, 0xff, 0xfc,
    0x3a, 0x1f, 0x37, 0xa4, 0x3f, 0xff, 0x54, 0x43,
    0x9b, 0x90, 0xff, 0xfe, 0x32, 0x13, 0x7a, 0x43,
    0xff, 0xfc, 0xca, 0xbd, 0x21, 0xff, 0xff, 0x14,
    0x5c, 0x87, 0xff, 0xfc, 0x39, 0x70, 0x7f, 0xff,
    0xc3, 0xc0,

    /* U+E801 "" */
    0xf, 0xff, 0x93, 0x44, 0x3f, 0xfd, 0xcd, 0xe9,
    0xf, 0xff, 0x73, 0x7a, 0x43, 0xff, 0xdc, 0xde,
    0x90, 0xff, 0xf7, 0x37, 0x21, 0xff, 0xee, 0x6f,
    0x48, 0x7f, 0xfb, 0x9b, 0xd2, 0x1f, 0xfe, 0xe6,
    0xe4, 0x3f, 0xfd, 0xcd, 0xe9, 0xf, 0xff, 0x73,
    0x7a, 0x43, 0xff, 0xdc, 0xdc, 0x87, 0xff, 0xb9,
    0xbd, 0x21, 0xff, 0xee, 0x6f, 0x48, 0x7f, 0xfb,
    0x9b, 0xd2, 0x1f, 0xfe, 0xe6, 0xe4, 0x3f, 0xfd,
    0xcd, 0x10, 0xff, 0xff, 0x87, 0xff, 0xfc, 0x3f,
    0xff, 0xe1, 0xff, 0xff, 0xf, 0xff, 0xf8, 0x7f,
    0xff, 0xc3, 0xff, 0xfe, 0x1f, 0xff, 0xf0, 0xff,
    0xff, 0x87, 0xff, 0xfc, 0x3f, 0xff, 0xe1, 0xff,
    0xff, 0xf, 0xff, 0xf8, 0x7f, 0xff, 0xc3, 0xff,
    0xfe, 0x1f, 0xfc, 0x24, 0x3f, 0xfd, 0xae, 0x1f,
    0xfe, 0xed, 0xf, 0xff, 0x6a, 0x1f, 0xfe, 0xe7,
    0x43, 0xff, 0xdb, 0xa1, 0xff, 0xed, 0x50, 0x7f,
    0xfb, 0x58, 0x3f, 0xfd, 0xae, 0x1f, 0xfe, 0xd6,
    0x43, 0xff, 0xd8, 0xc1, 0xff, 0xed, 0xa0, 0x7f,
    0xfb, 0x64, 0x3f, 0xfd, 0xb2, 0x1f, 0xfe, 0xc6,
    0x43, 0xff, 0xd8, 0xc8, 0x7f, 0xfa, 0xda, 0x7,
    0xff, 0xb1, 0x90, 0xff, 0xf5, 0xb4, 0xf, 0xff,
    0x63, 0x21, 0xff, 0xea, 0x6a, 0xf, 0xff, 0x42,
    0xae, 0x50, 0x7f, 0xf9, 0x5a, 0x74, 0x43, 0xff,
    0xca, 0xd3, 0x94, 0x1f, 0xfe, 0x56, 0xf4, 0xa0,
    0xff, 0xf2, 0xb4, 0xe4, 0x3f, 0xfc, 0xcd, 0xe9,
    0x41, 0xff, 0xe5, 0x6f, 0x48, 0x7f, 0xf9, 0xbb,
    0xd2, 0x1f, 0xfe, 0x70,

    /* U+E802 "" */
    0xf, 0xff, 0xf8, 0x7f, 0xff, 0xc3, 0xcf, 0x21,
    0xff, 0xfe, 0x6e, 0x10, 0xff, 0xfe, 0x37, 0x21,
    0xff, 0xfe, 0x79, 0xf, 0xff, 0xf3, 0x70, 0x7f,
    0xff, 0x9b, 0x90, 0xff, 0xff, 0x3c, 0x87, 0xff,
    0xf9, 0xb8, 0x3f, 0xff, 0xcd, 0xc8, 0x7f, 0xff,
    0x9e, 0x43, 0xff, 0xfc, 0xdc, 0x1f, 0xff, 0xe6,
    0xe4, 0x3f, 0xff, 0xcf, 0x21, 0xff, 0xfe, 0x6e,
    0xf, 0xff, 0xf3, 0x72, 0x1f, 0xff, 0xe7, 0x90,
    0xff, 0xff, 0x37, 0x7, 0xff, 0xf9, 0xb9, 0xf,
    0xff, 0xf3, 0xc8, 0x7f, 0xff, 0x9b, 0x83, 0xff,
    0xfc, 0xdc, 0x87, 0xff, 0xf9, 0xa2, 0x1f, 0xff,
    0xe6, 0xe4, 0x3f, 0xff, 0xd7, 0x21, 0xff, 0xfe,
    0x6d, 0xf, 0xff, 0xf3, 0x72, 0x1f, 0xff, 0xeb,
    0x90, 0xff, 0xff, 0x36, 0x87, 0xff, 0xfd, 0xa2,
    0x1f, 0xff, 0xf0, 0x34, 0x43, 0xff, 0xfe, 0x19,
    0xb9, 0xf, 0xff, 0xf8, 0x66, 0xd0, 0xff, 0xff,
    0x87, 0x5c, 0x87, 0xff, 0xfc, 0x33, 0x72, 0x1f,
    0xff, 0xf0, 0xcd, 0xc1, 0xff, 0xff, 0xe, 0x79,
    0xf, 0xff, 0xf8, 0x66, 0xe4, 0x3f, 0xff, 0xe1,
    0x9b, 0x83, 0xff, 0xfe, 0x1c, 0xf2, 0x1f, 0xff,
    0xf0, 0xcd, 0xc8, 0x7f, 0xff, 0xc3, 0x37, 0x7,
    0xff, 0xfc, 0x39, 0xf2, 0x1f, 0xff, 0xf0, 0xeb,
    0x90, 0xff, 0xff, 0x86, 0x6e, 0x43, 0xff, 0xfe,
    0x19, 0xb4, 0x3f, 0xff, 0xe1, 0xd7, 0x21, 0xff,
    0xff, 0xc, 0xdc, 0x87, 0xff, 0xfc, 0x33, 0x70,
    0x7f, 0xff, 0xc3, 0x9e, 0x43, 0xff, 0xfe, 0x19,
    0xb9, 0xf, 0xff, 0xf8, 0x66, 0xe4, 0x3f, 0xff,
    0xe1, 0x9b, 0x43, 0xff, 0xfe, 0x1d, 0x72, 0x1f,
    0xff, 0xf0, 0xcd, 0xc8, 0x7f, 0xff, 0xc3, 0x37,
    0x7, 0xff, 0xfc, 0x39, 0xe4, 0x3f, 0xff, 0xe1,
    0x9b, 0xa0, 0x7f, 0xff, 0xc3, 0x2c, 0x0,

    /* U+E803 "" */
    0xf, 0xff, 0xf8, 0x7d, 0x72, 0x1f, 0xff, 0xf0,
    0xcd, 0xc8, 0x7f, 0xff, 0xc3, 0x36, 0x87, 0xff,
    0xfc, 0x3a, 0xe4, 0x3f, 0xff, 0xe1, 0x9b, 0x90,
    0xff, 0xff, 0x86, 0x6e, 0xf, 0xff, 0xf8, 0x73,
    0xc8, 0x7f, 0xff, 0xc3, 0x37, 0x21, 0xff, 0xff,
    0xc, 0xdc, 0x1f, 0xff, 0xf0, 0xe7, 0x90, 0xff,
    0xff, 0x86, 0x6e, 0x43, 0xff, 0xfe, 0x19, 0xb8,
    0x3f, 0xff, 0xe1, 0xcf, 0x21, 0xff, 0xff, 0xc,
    0xdc, 0x87, 0xff, 0xfc, 0x33, 0x70, 0x7f, 0xff,
    0xc3, 0x9e, 0x43, 0xff, 0xfe, 0x19, 0xb9, 0xf,
    0xff, 0xf8, 0x66, 0xe0, 0xff, 0xff, 0x87, 0x3c,
    0x87, 0xff, 0xfc, 0x33, 0x72, 0x1f, 0xff, 0xf0,
    0xcd, 0xc1, 0xff, 0xff, 0xe, 0x79, 0xf, 0xff,
    0xf8, 0x66, 0xe4, 0x3f, 0xff, 0xe1, 0x9b, 0x83,
    0xff, 0xfe, 0x1c, 0xf2, 0x1f, 0xff, 0xf0, 0xcd,
    0xc8, 0x7f, 0xff, 0xc3, 0x36, 0x87, 0xff, 0xfc,
    0x3a, 0xe4, 0x3f, 0xff, 0xe1, 0x9a, 0x21, 0xff,
    0xff, 0x3, 0x44, 0x3f, 0xff, 0xcd, 0xc8, 0x7f,
    0xff, 0x9e, 0x43, 0xff, 0xfc, 0xdc, 0x1f, 0xff,
    0xe6, 0xe4, 0x3f, 0xff, 0xcf, 0x21, 0xff, 0xfe,
    0x6e, 0xf, 0xff, 0xf3, 0x72, 0x1f, 0xff, 0xeb,
    0x90, 0xff, 0xff, 0x36, 0x87, 0xff, 0xf9, 0xb9,
    0xf, 0xff, 0xeb, 0x72, 0x1f, 0xff, 0xe7, 0x90,
    0xff, 0xff, 0x37, 0x7, 0xff, 0xf9, 0xb9, 0xf,
    0xff, 0xf5, 0xc8, 0x7f, 0xff, 0x9b, 0x43, 0xff,
    0xfc, 0xdc, 0x87, 0xff, 0xf5, 0xb9, 0xf, 0xff,
    0xf3, 0xc8, 0x7f, 0xff, 0x9b, 0x83, 0xff, 0xfc,
    0xdc, 0x87, 0xff, 0xfa, 0xe4, 0x3f, 0xff, 0xcd,
    0xa1, 0xff, 0xfe, 0x6e, 0x43, 0xff, 0xfa, 0xdc,
    0x87, 0xff, 0xf9, 0xe4, 0x3f, 0xff, 0xbd, 0x38,
    0x3f, 0xff, 0xe2, 0xc1, 0xff, 0xff, 0x0,

    /* U+E804 "" */
    0xf, 0x2e, 0xf, 0xcd, 0xd6, 0xe0, 0xe6, 0x43,
    0xcc, 0x87, 0xff, 0xfc, 0x3f, 0xff, 0xe1, 0xff,
    0xff, 0xf, 0xff, 0xf8, 0x7f, 0xff, 0xc3, 0xff,
    0xfe, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x84, 0xc8,
    0x73, 0x44, 0x33, 0x75, 0x72, 0x10
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 771, .box_w = 87, .box_h = 40, .ofs_x = 11, .ofs_y = 1},
    {.bitmap_index = 258, .adv_w = 771, .box_w = 60, .box_h = 64, .ofs_x = 13, .ofs_y = -8},
    {.bitmap_index = 470, .adv_w = 1088, .box_w = 81, .box_h = 59, .ofs_x = 11, .ofs_y = -5},
    {.bitmap_index = 717, .adv_w = 1088, .box_w = 81, .box_h = 59, .ofs_x = 11, .ofs_y = -5},
    {.bitmap_index = 964, .adv_w = 1088, .box_w = 15, .box_h = 45, .ofs_x = 31, .ofs_y = 3}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 59392, .range_length = 5, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 1
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t PlayerIcons68px = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 64,          /*The maximum line height required by the font*/
    .base_line = 8,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_HOR,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};

#endif /*#if PLAYERICONS62PX*/

