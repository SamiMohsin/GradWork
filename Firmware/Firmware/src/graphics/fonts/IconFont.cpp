#include "lvgl/lvgl.h"

/*******************************************************************************
 * Size: 20 px
 * Bpp: 2
 * Opts: 
 ******************************************************************************/

#ifndef ICONFONT
#define ICONFONT 1
#endif

#if ICONFONT

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t gylph_bitmap[] = {
    /* U+F240 "" */
    0xf, 0xff, 0xe3, 0x7f, 0xff, 0x82, 0x43, 0xff,
    0x86, 0xdc, 0x87, 0xff, 0x81, 0xb4, 0x3f, 0xf8,
    0x3a, 0x19, 0xbf, 0xff, 0xb5, 0x21, 0xa8, 0x1f,
    0xf2, 0x1c, 0xe8, 0xdf, 0x48, 0x7f, 0xf4, 0x9c,
    0x39, 0xfa, 0x43, 0xff, 0x86, 0xe8, 0x48, 0x7f,
    0xf7, 0x9a, 0x7, 0xff, 0xd9, 0xf, 0xff, 0xf8,
    0x7f, 0xfb, 0x10, 0xff, 0xe0, 0xba, 0x12, 0x1f,
    0xfd, 0xe6, 0x81, 0xc8, 0x73, 0xa3, 0x7d, 0x21,
    0xff, 0xd2, 0x70, 0xe7, 0xe9, 0xf, 0xb4, 0x33,
    0x7f, 0xff, 0x6a, 0x43, 0x50, 0x3f, 0xf8, 0xd,
    0xc8, 0x7f, 0xf8, 0x1b, 0x43, 0xff, 0x88, 0xdf,
    0xff, 0xe0, 0x90, 0xff, 0xe0, 0x0,

    /* U+F241 "" */
    0xf, 0xff, 0xe3, 0x7f, 0xff, 0x82, 0x43, 0xff,
    0x86, 0xdc, 0x87, 0xff, 0x81, 0xb4, 0x3f, 0xf8,
    0x3a, 0x19, 0xbf, 0xff, 0xb5, 0x21, 0xa8, 0x1f,
    0xf2, 0x1c, 0xe8, 0xdf, 0x48, 0x1b, 0xe9, 0xf,
    0xfe, 0x4b, 0x87, 0x3f, 0x48, 0x7f, 0xf0, 0xdd,
    0x9, 0x3, 0xa1, 0x21, 0xff, 0xd5, 0x68, 0x1f,
    0xff, 0x64, 0x3f, 0xff, 0xe1, 0xff, 0xec, 0x43,
    0xff, 0x82, 0xe8, 0x48, 0x1d, 0x9, 0xf, 0xfe,
    0xab, 0x40, 0xe4, 0x39, 0xd1, 0xbe, 0x90, 0x37,
    0xd2, 0x1f, 0xfc, 0x97, 0xe, 0x7e, 0x90, 0xfb,
    0x43, 0x37, 0xff, 0xf6, 0xa4, 0x35, 0x3, 0xff,
    0x80, 0xdc, 0x87, 0xff, 0x81, 0xb4, 0x3f, 0xf8,
    0x8d, 0xff, 0xfe, 0x9, 0xf, 0xfe, 0x0,

    /* U+F242 "" */
    0xf, 0xff, 0xe3, 0x7f, 0xff, 0x82, 0x43, 0xff,
    0x86, 0xdc, 0x87, 0xff, 0x81, 0xb4, 0x3f, 0xf8,
    0x3a, 0x19, 0xbf, 0xff, 0xb5, 0x21, 0xa8, 0x1f,
    0xf2, 0x1c, 0xe8, 0xdf, 0x48, 0x1b, 0xe9, 0x3,
    0x7d, 0x21, 0xff, 0xc0, 0x70, 0xe7, 0xe9, 0xf,
    0xfe, 0x1b, 0xa1, 0x20, 0x74, 0x24, 0x2d, 0x9,
    0xc3, 0xff, 0x96, 0xd0, 0x3f, 0xfe, 0xc8, 0x7f,
    0xff, 0xc3, 0xff, 0xd8, 0x87, 0xff, 0x5, 0xd0,
    0x90, 0x3a, 0x12, 0x16, 0x84, 0xe1, 0xff, 0xcb,
    0x68, 0x1c, 0x87, 0x3a, 0x37, 0xd2, 0x6, 0xfa,
    0x40, 0xdf, 0x48, 0x7f, 0xf0, 0x1c, 0x39, 0xfa,
    0x43, 0xed, 0xc, 0xdf, 0xff, 0xda, 0x90, 0xd4,
    0xf, 0xfe, 0x3, 0x72, 0x1f, 0xfe, 0x6, 0xd0,
    0xff, 0xe2, 0x37, 0xff, 0xf8, 0x24, 0x3f, 0xf8,
    0x0,

    /* U+F243 "" */
    0xf, 0xff, 0xe3, 0x7f, 0xff, 0x7e, 0x43, 0xff,
    0x88, 0xdc, 0x87, 0xff, 0x7d, 0xb9, 0xf, 0xfe,
    0xe, 0x86, 0x6f, 0xff, 0xed, 0x48, 0x4e, 0x87,
    0xfc, 0x87, 0x3a, 0x37, 0xd2, 0x6, 0xfa, 0x40,
    0xdf, 0x48, 0x66, 0xfa, 0x44, 0x39, 0xbd, 0x21,
    0xff, 0xc4, 0x74, 0x24, 0xe, 0x84, 0x85, 0xa1,
    0x38, 0x4e, 0x84, 0x87, 0xff, 0x1, 0xa2, 0x1f,
    0xff, 0x44, 0x3f, 0xff, 0xe1, 0xff, 0xec, 0x43,
    0xff, 0x86, 0xe8, 0x48, 0x1d, 0x9, 0xb, 0x42,
    0x70, 0x9c, 0x32, 0x1f, 0xfc, 0x6, 0x88, 0x72,
    0x1c, 0xe8, 0xdf, 0x48, 0x1b, 0xe9, 0x3, 0x7d,
    0x21, 0x9f, 0xd2, 0x21, 0xcd, 0xe9, 0xf, 0xda,
    0x19, 0xbf, 0xff, 0xb5, 0x21, 0x3a, 0x1f, 0xfc,
    0x6, 0xe4, 0x3f, 0xfb, 0xed, 0xc8, 0x7f, 0xf1,
    0x1b, 0xff, 0xfb, 0xf2, 0x1f, 0xfc, 0x10,

    /* U+F244 "" */
    0xf, 0xff, 0xe3, 0x7f, 0xff, 0x82, 0x43, 0xff,
    0x86, 0xdc, 0x87, 0xff, 0x81, 0xb4, 0x3f, 0xf8,
    0x3a, 0x19, 0xbf, 0xff, 0xb5, 0x21, 0xa8, 0x1f,
    0xf2, 0x1c, 0xea, 0xbf, 0xff, 0xab, 0x1, 0xc3,
    0x9f, 0xa4, 0x3f, 0xfa, 0x4d, 0x10, 0xff, 0xe9,
    0x34, 0xf, 0xfe, 0x63, 0x4f, 0x4a, 0xb4, 0x39,
    0x41, 0xff, 0xcc, 0x43, 0xff, 0x94, 0x94, 0xfa,
    0xa, 0xfd, 0x8, 0x7f, 0xf8, 0xd4, 0x1c, 0xf2,
    0xd7, 0xa4, 0x3f, 0xf9, 0xa8, 0x7f, 0xf4, 0xda,
    0x90, 0xff, 0xe7, 0x34, 0xe, 0x43, 0x9d, 0x57,
    0xff, 0xf5, 0x60, 0x38, 0x73, 0xf4, 0x87, 0xda,
    0x19, 0xbf, 0xff, 0xb5, 0x21, 0xa8, 0x1f, 0xfc,
    0x6, 0xe4, 0x3f, 0xfc, 0xd, 0xa1, 0xff, 0xc4,
    0x6f, 0xff, 0xf0, 0x48, 0x7f, 0xf0, 0x0,

    /* U+F245 "" */
    0xf, 0xfe, 0x12, 0xc1, 0xff, 0xd6, 0xee, 0x43,
    0xff, 0xac, 0xdc, 0x87, 0xff, 0x59, 0xb9, 0xf,
    0xfe, 0x92, 0x80, 0xdc, 0x87, 0xf5, 0xfa, 0xf,
    0xf9, 0xee, 0x40, 0xde, 0x43, 0xda, 0x13, 0xe8,
    0x3f, 0xf8, 0x8, 0x7f, 0xf0, 0x9b, 0x90, 0x9f,
    0x5a, 0x1b, 0xbc, 0x84, 0xf9, 0xf, 0xe6, 0xe4,
    0x25, 0x6, 0x58, 0x27, 0xd0, 0x7f, 0xf0, 0xdb,
    0x90, 0xfe, 0x7d, 0x7, 0xff, 0xa9, 0xb9, 0xf,
    0xe7, 0xd0, 0x7f, 0xf0, 0xdb, 0x90, 0x94, 0x19,
    0x60, 0x9f, 0x41, 0xfc, 0xdc, 0x84, 0xfa, 0xd0,
    0xdd, 0xc8, 0x4f, 0x90, 0xf6, 0x84, 0xfa, 0xf,
    0xfe, 0x7d, 0xfa, 0xf, 0xf9, 0xee, 0x40, 0xde,
    0x43, 0xff, 0x98, 0xa0, 0x37, 0x21, 0xff, 0xd0,
    0x6e, 0x43, 0xff, 0xa0, 0xdc, 0x87, 0xff, 0x43,
    0xb9, 0xf, 0xfe, 0x20
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 317, .box_w = 66, .box_h = 14, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 94, .adv_w = 317, .box_w = 66, .box_h = 14, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 197, .adv_w = 317, .box_w = 66, .box_h = 14, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 310, .adv_w = 317, .box_w = 66, .box_h = 14, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 429, .adv_w = 317, .box_w = 66, .box_h = 14, .ofs_x = -1, .ofs_y = 0},
    {.bitmap_index = 540, .adv_w = 183, .box_w = 36, .box_h = 20, .ofs_x = 0, .ofs_y = -3}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/



/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 62016, .range_length = 6, .glyph_id_start = 1,
        .unicode_list = NULL, .glyph_id_ofs_list = NULL, .list_length = 0, .type = LV_FONT_FMT_TXT_CMAP_FORMAT0_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

/*Store all the custom data of the font*/
static lv_font_fmt_txt_dsc_t font_dsc = {
    .glyph_bitmap = gylph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 2,
    .kern_classes = 0,
    .bitmap_format = 1
};


/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
lv_font_t IconFont = {
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 20,          /*The maximum line height required by the font*/
    .base_line = 3,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_HOR,
#endif
    .dsc = &font_dsc           /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
};

#endif /*#if ICONFONT*/

